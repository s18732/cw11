// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using cw11.Models;

namespace cw11.Migrations
{
    [DbContext(typeof(DoctorDbContext))]
    partial class DoctorDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("cw11.Models.Doctor", b =>
                {
                    b.Property<int>("IdDoctor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("IdDoctor");

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            IdDoctor = 1,
                            Email = "doktor1@bla.pl",
                            FirstName = "doktor1",
                            LastName = "nazwiskodoktora1"
                        },
                        new
                        {
                            IdDoctor = 2,
                            Email = "doktor2@bla.pl",
                            FirstName = "doktor2",
                            LastName = "nazwiskodoktora2"
                        },
                        new
                        {
                            IdDoctor = 3,
                            Email = "doktor3@bla.pl",
                            FirstName = "doktor3",
                            LastName = "nazwiskodoktora3"
                        },
                        new
                        {
                            IdDoctor = 4,
                            Email = "doktor4@bla.pl",
                            FirstName = "doktor4",
                            LastName = "nazwiskodoktora4"
                        });
                });

            modelBuilder.Entity("cw11.Models.Medicament", b =>
                {
                    b.Property<int>("IdMedicament")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("IdMedicament");

                    b.ToTable("Medicaments");

                    b.HasData(
                        new
                        {
                            IdMedicament = 1,
                            Description = "opisleku1",
                            Name = "lek1",
                            Type = "typ1"
                        },
                        new
                        {
                            IdMedicament = 2,
                            Description = "opisleku2",
                            Name = "lek2",
                            Type = "typ2"
                        },
                        new
                        {
                            IdMedicament = 3,
                            Description = "opisleku3",
                            Name = "lek3",
                            Type = "typ3"
                        },
                        new
                        {
                            IdMedicament = 4,
                            Description = "opisleku4",
                            Name = "lek4",
                            Type = "typ4"
                        });
                });

            modelBuilder.Entity("cw11.Models.Patient", b =>
                {
                    b.Property<int>("IdPatient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("IdPatient");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            IdPatient = 1,
                            Birthdate = new DateTime(2020, 5, 18, 17, 44, 4, 125, DateTimeKind.Local).AddTicks(8921),
                            FirstName = "pacjent1",
                            LastName = "nazwiskopacjenta1"
                        },
                        new
                        {
                            IdPatient = 2,
                            Birthdate = new DateTime(2020, 5, 18, 17, 44, 4, 129, DateTimeKind.Local).AddTicks(115),
                            FirstName = "pacjent2",
                            LastName = "nazwiskopacjenta2"
                        },
                        new
                        {
                            IdPatient = 3,
                            Birthdate = new DateTime(2020, 5, 18, 17, 44, 4, 129, DateTimeKind.Local).AddTicks(166),
                            FirstName = "pacjent3",
                            LastName = "nazwiskopacjenta3"
                        },
                        new
                        {
                            IdPatient = 4,
                            Birthdate = new DateTime(2020, 5, 18, 17, 44, 4, 129, DateTimeKind.Local).AddTicks(172),
                            FirstName = "pacjent4",
                            LastName = "nazwiskopacjenta4"
                        });
                });

            modelBuilder.Entity("cw11.Models.Prescription", b =>
                {
                    b.Property<int>("IdPrescription")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdDoctor")
                        .HasColumnType("int");

                    b.Property<int>("IdPatient")
                        .HasColumnType("int");

                    b.HasKey("IdPrescription");

                    b.HasIndex("IdDoctor");

                    b.HasIndex("IdPatient");

                    b.ToTable("Prescriptions");

                    b.HasData(
                        new
                        {
                            IdPrescription = 1,
                            Date = new DateTime(2020, 5, 18, 17, 44, 4, 129, DateTimeKind.Local).AddTicks(4565),
                            DueDate = new DateTime(2020, 5, 18, 17, 44, 4, 129, DateTimeKind.Local).AddTicks(5087),
                            IdDoctor = 3,
                            IdPatient = 1
                        },
                        new
                        {
                            IdPrescription = 2,
                            Date = new DateTime(2020, 5, 18, 17, 44, 4, 129, DateTimeKind.Local).AddTicks(6463),
                            DueDate = new DateTime(2020, 5, 18, 17, 44, 4, 129, DateTimeKind.Local).AddTicks(6488),
                            IdDoctor = 4,
                            IdPatient = 4
                        },
                        new
                        {
                            IdPrescription = 3,
                            Date = new DateTime(2020, 5, 18, 17, 44, 4, 129, DateTimeKind.Local).AddTicks(6518),
                            DueDate = new DateTime(2020, 5, 18, 17, 44, 4, 129, DateTimeKind.Local).AddTicks(6522),
                            IdDoctor = 2,
                            IdPatient = 3
                        },
                        new
                        {
                            IdPrescription = 4,
                            Date = new DateTime(2020, 5, 18, 17, 44, 4, 129, DateTimeKind.Local).AddTicks(6526),
                            DueDate = new DateTime(2020, 5, 18, 17, 44, 4, 129, DateTimeKind.Local).AddTicks(6529),
                            IdDoctor = 1,
                            IdPatient = 2
                        });
                });

            modelBuilder.Entity("cw11.Models.Prescription_Medicament", b =>
                {
                    b.Property<int>("IdMedicament")
                        .HasColumnType("int");

                    b.Property<int>("IdPrescription")
                        .HasColumnType("int");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Dose")
                        .HasColumnType("int");

                    b.HasKey("IdMedicament", "IdPrescription");

                    b.HasIndex("IdPrescription");

                    b.ToTable("Prescription_Medicaments");

                    b.HasData(
                        new
                        {
                            IdMedicament = 3,
                            IdPrescription = 3,
                            Details = "szczegoly1",
                            Dose = 3
                        },
                        new
                        {
                            IdMedicament = 2,
                            IdPrescription = 4,
                            Details = "szczegoly2",
                            Dose = 4
                        },
                        new
                        {
                            IdMedicament = 4,
                            IdPrescription = 1,
                            Details = "szczegoly3",
                            Dose = 2
                        },
                        new
                        {
                            IdMedicament = 1,
                            IdPrescription = 2,
                            Details = "szczegoly4",
                            Dose = 10
                        });
                });

            modelBuilder.Entity("cw11.Models.Prescription", b =>
                {
                    b.HasOne("cw11.Models.Doctor", "Doctor")
                        .WithMany("Prescriptions")
                        .HasForeignKey("IdDoctor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("cw11.Models.Patient", "Patient")
                        .WithMany("Prescriptions")
                        .HasForeignKey("IdPatient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("cw11.Models.Prescription_Medicament", b =>
                {
                    b.HasOne("cw11.Models.Medicament", "Medicament")
                        .WithMany("Prescription_Medicaments")
                        .HasForeignKey("IdMedicament")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("cw11.Models.Prescription", "Prescription")
                        .WithMany("Prescription_Medicaments")
                        .HasForeignKey("IdPrescription")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
